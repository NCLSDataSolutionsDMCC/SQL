--- Database name:  	DB_STG_TALOS
--- DBMS name:      	Microsoft SQL Server 2017
--- Created on:     	5/19/2019 2:42:18 AM
--- Project Name:	TALOS Integration & Reporting
--- Application:	VyB (Visual Your Business)
--- DB Layer:		STG
--- DB Name:		DB_STG_TALOS
--- Auhor:		Florian Nicolas (External)
--- Description:	Creation of the table TB_EVENT_LOG_FS
--------------------------------------------------------------------
USE DB_VYB_STG_TALOS
GO
IF OBJECT_ID('TB_EVENT_LOG_FS ', 'U') IS NOT NULL
DROP TABLE dbo.TB_EVENT_LOG_FS
DROP SYNONYM SYN_TB_EVENT_LOG_FS
GO
USE DB_VYB_STG_TALOS
GO
--- CREATE TABLE WITH THE ATTRIBUTES
CREATE TABLE TB_EVENT_LOG_FS (
   EVENT_ID             VARCHAR(256)         NOT NULL,
   EVENT_USER_ID        VARCHAR(256)         NULL,
   EVENT_TYPE_ID        VARCHAR(256)         NULL,
   EVENT_TYPE_NUM       VARCHAR(256)         NULL,
   EVENT_APPLICATION_ID VARCHAR(256)         NULL,
   EVENT_CREATION_DATE  VARCHAR(256)         NULL,
   EVENT_PROPERTIES     VARCHAR(256)         NULL,
   EVENT_TRIGGERED_BY   VARCHAR(256)         NULL,
   EVENT_ASSOC_GAME     VARCHAR(256)         NULL
)
GO
---
IF EXISTS (SELECT 1 FROM  SYS.EXTENDED_PROPERTIES
           WHERE MAJOR_ID = OBJECT_ID('TB_EVENT_LOG_FS') AND MINOR_ID = 0)
BEGIN 
   DECLARE @CURRENTUSER SYSNAME 
SELECT @CURRENTUSER = USER_NAME() 
EXECUTE SP_DROPEXTENDEDPROPERTY 'MS_Description',  
   'user', @CURRENTUSER, 'table', 'TB_EVENT_LOG_FS' 
 
END 
SELECT @CURRENTUSER = USER_NAME() 
EXECUTE SP_ADDEXTENDEDPROPERTY 'MS_Description',  
   '- Client Name: Philip Morris International
   - Client Location: Dubai (UAE)
   - Application Name: VyB (Visual Your Business)Client: Philip Morris International
   - Client Location: Dubai (UAE)
   - Application Name: VyB (Visual Your Business)
   - Application Description: VyB is BI application that enable to load internal PMI data from the source system to last DB layer in order to build data reports and interactive data visualization applications. The data reports and data visualizations applications are developed for internal use.
   
   - Component Type: Table
   - Component Name: TB_EVENT_LOG_FS
   - Component Description: Table that contains all the Talos events transactional records', 
   'user', @CURRENTUSER, 'table', 'TB_EVENT_LOG_FS'
GO
IF EXISTS(SELECT 1 FROM SYS.EXTENDED_PROPERTIES P WHERE
      P.MAJOR_ID = OBJECT_ID('TB_EVENT_LOG_FS')
  AND P.MINOR_ID = (SELECT C.COLUMN_ID FROM SYS.COLUMNS C WHERE C.OBJECT_ID = P.MAJOR_ID AND C.NAME = 'EVENT_ID')
)
BEGIN
   DECLARE @CURRENTUSER SYSNAME
SELECT @CURRENTUSER = USER_NAME()
EXECUTE SP_DROPEXTENDEDPROPERTY 'MS_Description', 
   'user', @CURRENTUSER, 'table', 'TB_EVENT_LOG_FS', 'column', 'EVENT_ID'

END
SELECT @CURRENTUSER = USER_NAME()
EXECUTE SP_ADDEXTENDEDPROPERTY 'MS_Description', 
   'Event Identifier',
   'user', @CURRENTUSER, 'table', 'TB_EVENT_LOG_FS', 'column', 'EVENT_ID'
GO
IF EXISTS(SELECT 1 FROM SYS.EXTENDED_PROPERTIES P WHERE
      P.MAJOR_ID = OBJECT_ID('TB_EVENT_LOG_FS')
  AND P.MINOR_ID = (SELECT C.COLUMN_ID FROM SYS.COLUMNS C WHERE C.OBJECT_ID = P.MAJOR_ID AND C.NAME = 'EVENT_USER_ID')
)
BEGIN
   DECLARE @CURRENTUSER SYSNAME
SELECT @CURRENTUSER = USER_NAME()
EXECUTE SP_DROPEXTENDEDPROPERTY 'MS_Description', 
   'user', @CURRENTUSER, 'table', 'TB_EVENT_LOG_FS', 'column', 'EVENT_USER_ID'

END
SELECT @CURRENTUSER = USER_NAME()
EXECUTE SP_ADDEXTENDEDPROPERTY 'MS_Description', 
   'Event User Identifier',
   'user', @CURRENTUSER, 'table', 'TB_EVENT_LOG_FS', 'column', 'EVENT_USER_ID'
GO
IF EXISTS(SELECT 1 FROM SYS.EXTENDED_PROPERTIES P WHERE
      P.MAJOR_ID = OBJECT_ID('TB_EVENT_LOG_FS')
  AND P.MINOR_ID = (SELECT C.COLUMN_ID FROM SYS.COLUMNS C WHERE C.OBJECT_ID = P.MAJOR_ID AND C.NAME = 'EVENT_TYPE_ID')
)
BEGIN
   DECLARE @CURRENTUSER SYSNAME
SELECT @CURRENTUSER = USER_NAME()
EXECUTE SP_DROPEXTENDEDPROPERTY 'MS_Description', 
   'user', @CURRENTUSER, 'table', 'TB_EVENT_LOG_FS', 'column', 'EVENT_TYPE_ID'

END
SELECT @CURRENTUSER = USER_NAME()
EXECUTE SP_ADDEXTENDEDPROPERTY 'MS_Description', 
   'Event Type Identifier',
   'user', @CURRENTUSER, 'table', 'TB_EVENT_LOG_FS', 'column', 'EVENT_TYPE_ID'
GO
IF EXISTS(SELECT 1 FROM SYS.EXTENDED_PROPERTIES P WHERE
      P.MAJOR_ID = OBJECT_ID('TB_EVENT_LOG_FS')
  AND P.MINOR_ID = (SELECT C.COLUMN_ID FROM SYS.COLUMNS C WHERE C.OBJECT_ID = P.MAJOR_ID AND C.NAME = 'EVENT_TYPE_NUM')
)
BEGIN
   DECLARE @CURRENTUSER SYSNAME
SELECT @CURRENTUSER = USER_NAME()
EXECUTE SP_DROPEXTENDEDPROPERTY 'MS_Description', 
   'user', @CURRENTUSER, 'table', 'TB_EVENT_LOG_FS', 'column', 'EVENT_TYPE_NUM'

END
SELECT @CURRENTUSER = USER_NAME()
EXECUTE SP_ADDEXTENDEDPROPERTY 'MS_Description', 
   'Event Type Number',
   'user', @CURRENTUSER, 'table', 'TB_EVENT_LOG_FS', 'column', 'EVENT_TYPE_NUM'
GO
IF EXISTS(SELECT 1 FROM SYS.EXTENDED_PROPERTIES P WHERE
      P.MAJOR_ID = OBJECT_ID('TB_EVENT_LOG_FS')
  AND P.MINOR_ID = (SELECT C.COLUMN_ID FROM SYS.COLUMNS C WHERE C.OBJECT_ID = P.MAJOR_ID AND C.NAME = 'EVENT_APPLICATION_ID')
)
BEGIN
   DECLARE @CURRENTUSER SYSNAME
SELECT @CURRENTUSER = USER_NAME()
EXECUTE SP_DROPEXTENDEDPROPERTY 'MS_Description', 
   'user', @CURRENTUSER, 'table', 'TB_EVENT_LOG_FS', 'column', 'EVENT_APPLICATION_ID'

END
SELECT @CURRENTUSER = USER_NAME()
EXECUTE SP_ADDEXTENDEDPROPERTY 'MS_Description', 
   'Event Application Identifier',
   'user', @CURRENTUSER, 'table', 'TB_EVENT_LOG_FS', 'column', 'EVENT_APPLICATION_ID'
GO
IF EXISTS(SELECT 1 FROM SYS.EXTENDED_PROPERTIES P WHERE
      P.MAJOR_ID = OBJECT_ID('TB_EVENT_LOG_FS')
  AND P.MINOR_ID = (SELECT C.COLUMN_ID FROM SYS.COLUMNS C WHERE C.OBJECT_ID = P.MAJOR_ID AND C.NAME = 'EVENT_CREATION_DATE')
)
BEGIN
   DECLARE @CURRENTUSER SYSNAME
SELECT @CURRENTUSER = USER_NAME()
EXECUTE SP_DROPEXTENDEDPROPERTY 'MS_Description', 
   'user', @CURRENTUSER, 'table', 'TB_EVENT_LOG_FS', 'column', 'EVENT_CREATION_DATE'

END
SELECT @CURRENTUSER = USER_NAME()
EXECUTE SP_ADDEXTENDEDPROPERTY 'MS_Description', 
   'Event Creation Date',
   'user', @CURRENTUSER, 'table', 'TB_EVENT_LOG_FS', 'column', 'EVENT_CREATION_DATE'
GO
IF EXISTS(SELECT 1 FROM SYS.EXTENDED_PROPERTIES P WHERE
      P.MAJOR_ID = OBJECT_ID('TB_EVENT_LOG_FS')
  AND P.MINOR_ID = (SELECT C.COLUMN_ID FROM SYS.COLUMNS C WHERE C.OBJECT_ID = P.MAJOR_ID AND C.NAME = 'EVENT_PROPERTIES')
)
BEGIN
   DECLARE @CURRENTUSER SYSNAME
SELECT @CURRENTUSER = USER_NAME()
EXECUTE SP_DROPEXTENDEDPROPERTY 'MS_Description', 
   'user', @CURRENTUSER, 'table', 'TB_EVENT_LOG_FS', 'column', 'EVENT_PROPERTIES'

END
SELECT @CURRENTUSER = USER_NAME()
EXECUTE SP_ADDEXTENDEDPROPERTY 'MS_Description', 
   'Event Properties',
   'user', @CURRENTUSER, 'table', 'TB_EVENT_LOG_FS', 'column', 'EVENT_PROPERTIES'
GO
IF EXISTS(SELECT 1 FROM SYS.EXTENDED_PROPERTIES P WHERE
      P.MAJOR_ID = OBJECT_ID('TB_EVENT_LOG_FS')
  AND P.MINOR_ID = (SELECT C.COLUMN_ID FROM SYS.COLUMNS C WHERE C.OBJECT_ID = P.MAJOR_ID AND C.NAME = 'EVENT_TRIGGERED_BY')
)
BEGIN
   DECLARE @CURRENTUSER SYSNAME
SELECT @CURRENTUSER = USER_NAME()
EXECUTE SP_DROPEXTENDEDPROPERTY 'MS_Description', 
   'user', @CURRENTUSER, 'table', 'TB_EVENT_LOG_FS', 'column', 'EVENT_TRIGGERED_BY'

END
SELECT @CURRENTUSER = USER_NAME()
EXECUTE SP_ADDEXTENDEDPROPERTY 'MS_Description', 
   'Event Triggered By',
   'user', @CURRENTUSER, 'table', 'TB_EVENT_LOG_FS', 'column', 'EVENT_TRIGGERED_BY'
GO
IF EXISTS(SELECT 1 FROM SYS.EXTENDED_PROPERTIES P WHERE
      P.MAJOR_ID = OBJECT_ID('TB_EVENT_LOG_FS')
  AND P.MINOR_ID = (SELECT C.COLUMN_ID FROM SYS.COLUMNS C WHERE C.OBJECT_ID = P.MAJOR_ID AND C.NAME = 'EVENT_ASSOC_GAME')
)
BEGIN
   DECLARE @CURRENTUSER SYSNAME
SELECT @CURRENTUSER = USER_NAME()
EXECUTE SP_DROPEXTENDEDPROPERTY 'MS_Description', 
   'user', @CURRENTUSER, 'table', 'TB_EVENT_LOG_FS', 'column', 'EVENT_ASSOC_GAME'
END
SELECT @CURRENTUSER = USER_NAME()
EXECUTE SP_ADDEXTENDEDPROPERTY 'MS_Description', 
   'Event Associated Game',
   'user', @CURRENTUSER, 'table', 'TB_EVENT_LOG_FS', 'column', 'EVENT_ASSOC_GAME'
GO
--- CREATION OF THE PRIMARY KEY 
--- HERE NO PRIMARY KEY
/*
ALTER TABLE TB_EVENT_LOG_FS
   ADD CONSTRAINT PK_TB_EVENT_LOG_FS PRIMARY KEY ()
GO
*/
--- CREATION OF THE SYNONYM 
CREATE SYNONYM SYN_TB_EVENT_LOG_FS FOR TB_EVENT_LOG_FS
GO